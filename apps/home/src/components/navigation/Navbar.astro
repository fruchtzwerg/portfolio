---
import { socials } from '../../constants/socials.const';
import { getPages, type MaybePage } from '../../utils/pages.utils';
import ThemeSelector from '../buttons/ThemeSelector.svelte';
import Search from '../search/Search.astro';

interface Props {
  id: string;
  class: string;
}

const { id, class: className } = Astro.props as Props;
const url = Astro.url;
const pageFiles = Object.values(
  import.meta.glob('../../pages/(*|**/index.*)', { eager: true }),
) as MaybePage[];

const pages = getPages(pageFiles);

const matches = (pathname: string) =>
  url.pathname.toLowerCase().startsWith(`/${pathname}`.toLowerCase());
---

<nav
  id={id}
  class:list={[
    className,
    'grid grid-flow-col items-center sm:gap-4 p-2 sm:p-4 w-full backdrop-blur-md',
  ]}
>
  <!-- Search -->
  <Search class="grid-in-[search]" inputClass="grid-in-[input]" />

  <!-- Themes -->
  <div class="grid-in-[theme]">
    <ThemeSelector
      client:only="svelte"
      transition:persist
      className="btn btn-ghost btn-circle btn-sm sm:btn-md"
    />
  </div>

  <!-- Tabs -->
  <ul class="grid-in-[tabs] gap-4 place-self-center hidden sm:flex w-full lg:w-auto">
    {
      pages.map(page => (
        <li class="grow">
          <a
            href={`/${page.title.toLowerCase()}/`}
            data-astro-prefetch="viewport"
            class:list={['menu-item', { active: matches(page.title) }]}
          >
            {page.title}
          </a>
        </li>
      ))
    }
  </ul>

  <!-- Socials -->
  <ul class="grid-in-[socials] flex gap-2 sm:gap-0">
    {
      socials.map(({ Icon, props }) => (
        <li>
          <a
            {...props}
            rel="noreferrer"
            class="btn btn-sm btn-circle btn-ghost text-lg sm:btn sm:btn-md sm:btn-ghost sm:btn-circle sm:!text-2xl"
          >
            <Icon />
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  .grid {
    grid-template-areas:
      'socials search theme'
      'input input input';
    grid-template-columns: 1fr auto auto;
    row-gap: 1.25rem;

    @screen sm {
      grid-template-areas:
        'tabs tabs tabs tabs'
        'socials empty search theme'
        'input input input input';
      grid-template-columns: auto 1fr auto auto;
      column-gap: 0;
    }

    @screen lg {
      grid-template-areas:
        'socials tabs search theme'
        'input input input input';
      grid-template-columns: auto 1fr auto auto;
    }
  }
</style>

<style lang="scss" is:global>
  * {
    scroll-margin-top: 4rem;

    @screen sm {
      scroll-margin-top: 10rem;
    }

    @screen lg {
      scroll-margin-top: 6rem;
    }
  }
</style>
