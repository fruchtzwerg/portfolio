---
import type { Timeslot } from '../models/timeslot.model';
import Hover from './Hover.astro';
import IconLink from '~icons/carbon/link';

type Props<Tag extends Tagname = Tagname> = {
  tag?: Tagname;
  section: Timeslot;
} & astroHTML.JSX.DefinedIntrinsicElements[Tag];

const { tag = 'li', class: className, section, ...props } = Astro.props;
---

<Hover
  tag={tag}
  {...props as any}
  class:list={[className, 'py-3 pr-3 mb-3 ml-3']}
  hoverClasses="!bg-base-300"
>
  <>
    <!-- Caption -->
    <div class="flex flex-start items-center">
      <div class="bg-base-content w-2 h-2 rounded-full -ml-[16.5px] mr-6"></div>
      <p class="text-base-content/60 text-sm my-0">{section.caption}</p>
    </div>

    <!-- Content -->
    <div class="mt-0.5 ml-4">
      <h4
        class="text-base-content/80 font-semibold text-xl mb-1.5 mt-0 transition-all group-hover:text-2xl group-hover:text-base-content dark:group-hover:text-white"
      >
        {section.title}
      </h4>
      <p class="text-base-content/60 last:mb-0 mb-3">{section.description}</p>

      <!-- Tags -->
      <ul class="flex flex-wrap gap-2">
        {
          section.tags.map(item => (
            <li class="badge badge-outline badge-secondary dark:group-hover:text-base-content/60">
              {item}
            </li>
          ))
        }
      </ul>

      <!-- Link -->
      {
        section.link && (
          <div class="flex gap-2 mt-3 items-center group-hover:text-primary dark:group-hover:text-accent text-base-content/80">
            <IconLink /> {section.link.label}
          </div>
        )
      }
    </div>
  </>
</Hover>
