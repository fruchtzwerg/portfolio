---
import type { MDX } from 'apps/portfolio/types';

import Experience from '../../layouts/Experience.astro';
import type { Frontmatter } from '../../models/timeslot.model';
import { byDate } from '../../utils/experience.utils';
import Link from '../buttons/Link.astro';

import Heading from './H2.astro';
import Item from './Li.astro';
import Paragraph from './P.astro';
import List from './Ul.astro';

type Section = MDX<Frontmatter>;

interface Props {
  class?: string;
}

const { class: className } = Astro.props as Props;

const sections = (await Astro.glob<Frontmatter>('../../cv/experience/*.mdx')) as Section[];
---

<ol class:list={[className, 'border-l border-base-content/50']}>
  {
    sections.sort(byDate).map(({ Content, components, frontmatter }) => (
      <li data-date-raw={new Date(frontmatter.date).getTime()} class="mt-16">
        <Experience frontmatter={frontmatter}>
          <Content
            components={{ ...components, h2: Heading, ul: List, li: Item, a: Link, p: Paragraph }}
          />
        </Experience>
      </li>
    ))
  }
</ol>

<script>
  const items = Array.from(document.querySelectorAll<HTMLElement>('[data-date-raw]'));

  items.forEach(item => {
    if (!item.dataset.dateRaw) return;

    item.dataset.date = Intl.DateTimeFormat(navigator.languages as string[], {
      month: 'short',
      year: 'numeric',
    }).format(new Date(+item.dataset.dateRaw));
  });
</script>

<style lang="scss">
  @screen sm {
    li::before {
      content: attr(data-date);
      @apply absolute left-0 pt-4 w-28 text-base-content/60 text-sm text-end;
    }
  }
</style>
